FROM node as dependencies

RUN git clone https://github.com/Informatievlaanderen/association-registry.git /src
RUN npx @eventcatalog/create-eventcatalog@latest /catalog

RUN apt-get update && apt-get install -y sed

RUN sed -i "/title:/ s/'EventCatalog'/'Verenigingsregister Event Catalog'/" /catalog/eventcatalog.config.js

RUN cat /catalog/eventcatalog.config.js

FROM mcr.microsoft.com/dotnet/runtime:7.0 AS base
WORKDIR /app

FROM mcr.microsoft.com/dotnet/sdk:7.0 AS build
WORKDIR /src
COPY ["AssociationRegistry.EventCatalog.csproj", "/src/AssociationRegistry.EventCatalog/"]
RUN dotnet restore "/src/AssociationRegistry.EventCatalog/AssociationRegistry.EventCatalog.csproj"

WORKDIR "/src/AssociationRegistry.EventCatalog"
COPY . .
RUN dotnet build "AssociationRegistry.EventCatalog.csproj" -c Release -o /app/build

FROM build AS publish
RUN dotnet publish "AssociationRegistry.EventCatalog.csproj" -c Release -r linux-x64 --self-contained true -o /app/publish

FROM node AS build-node
WORKDIR /catalog

COPY --from=publish /app/publish /out
COPY --from=dependencies /src /src
COPY --from=dependencies /catalog/ /catalog

WORKDIR /out
RUN ./AssociationRegistry.EventCatalog


# Stage 3: Final stage to create the running image
FROM node
WORKDIR /app

# If you need files generated by the .NET app during build, copy them here.
# COPY --from=build-dotnet /app/out/some-output-folder .

# Copy the Node.js catalog
COPY --from=build-node /catalog .

# As your .NET app is now run during build, the final ENTRYPOINT will only focus on the Node app.
ENTRYPOINT ["npm", "run", "build"]
